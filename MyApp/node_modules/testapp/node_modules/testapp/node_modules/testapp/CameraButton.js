import React, { useState, useEffect } from "react";
import {
  StyleSheet,
  Text,
  TouchableOpacity,
  Alert,
  Platform,
} from "react-native";
import { Camera } from "expo-camera";
import * as ImagePicker from "expo-image-picker";

export default function CameraButton() {
  // request for permission to use camera
  const [hasPermission, setHasPermission] = useState(null);
  const [type, setType] = useState(Camera.Constants.Type.back);

  useEffect(() => {
    (async () => {
      const { status } = await Camera.requestCameraPermissionsAsync();
      setHasPermission(status == "granted");
    })();
  }, []);

  const takePicture = async () => {
    if (hasPermission) {
      const image = await ImagePicker.launchCameraAsync({
        mediaTypes: ImagePicker.MediaTypeOptions.Images,
        allowsEditing: true,
        quality: 1,
      });

      if (!image.cancelled) {
        console.log(image.uri);
      }
    }
  };

  if (hasPermission === null) {
    return <Text>Access denied</Text>;
  } else if (hasPermission === false) {
    return <Text>No access camera</Text>;
  } else {
    return (
      <TouchableOpacity style={styles.button} onPress={takePicture}>
        <Text style={styles.buttonText}>Open Camera</Text>
      </TouchableOpacity>
    );
  }
}
